name: Daily Build

on:
  schedule:
    # JST 17:30 = UTC 08:30
    - cron: '30 8 * * *'
  workflow_dispatch:

jobs:
  daily-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup environment
      run: |
        echo "üïê Daily build at $(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M:%S JST')"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref_name }}"
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq curl bats shellcheck
        
    - name: Check for updates
      run: |
        echo "Checking for dependency updates..."
        # Check if shellcheck has updates
        CURRENT_VERSION=$(shellcheck --version | grep version: | awk '{print $2}')
        echo "Current ShellCheck version: $CURRENT_VERSION"
        
    - name: Run full test suite
      run: |
        export CLAUDE_TEST_MODE=true
        
        echo "=== Running ShellCheck ==="
        find . -name "*.sh" -type f -exec shellcheck {} \; || true
        
        echo "=== Running Bats tests ==="
        bats test/notification-handler.bats
        
        echo "=== Testing all examples ==="
        for file in notification-examples/*.json; do
          echo "Testing: $(basename $file)"
          cat "$file" | ./notification-handler.sh
        done
        
    - name: Validate configuration
      run: |
        echo "=== Validating directory structure ==="
        test -d notifiers || echo "‚ö†Ô∏è notifiers directory missing"
        test -d notifiers-examples || exit 1
        test -d notification-examples || exit 1
        test -d test || exit 1
        
        echo "=== Checking example files ==="
        test -f notifiers-examples/slack.example.sh || exit 1
        test -f notifiers-examples/osa.example.sh || exit 1
        
        echo "‚úÖ All validations passed"
        
    - name: Security scan
      run: |
        echo "=== Security Check ==="
        # Check for exposed secrets
        if grep -r "hooks.slack.com/services/T" . --exclude-dir=.git --exclude-dir=notifiers 2>/dev/null | grep -v "YOUR/WEBHOOK/URL"; then
          echo "‚ùå Warning: Potential webhook URL found in code"
          exit 1
        fi
        
        # Check for dangerous commands
        if grep -r "rm -rf /" . --exclude-dir=.git --exclude-dir=test 2>/dev/null; then
          echo "‚ùå Dangerous command pattern found"
          exit 1
        fi
        
        echo "‚úÖ Security scan passed"
        
    - name: Generate report
      if: always()
      run: |
        echo "=== Daily Build Report ==="
        echo "Date: $(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M:%S JST')"
        echo "Status: ${{ job.status }}"
        echo ""
        echo "Test Results:"
        echo "- ShellCheck: $(find . -name "*.sh" -type f | wc -l) files checked"
        echo "- Bats tests: $(grep -c "@test" test/*.bats) tests"
        echo "- Examples: $(ls notification-examples/*.json | wc -l) files"
        
    - name: Create issue on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const date = new Date().toLocaleString('ja-JP', { timeZone: 'Asia/Tokyo' });
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Daily Build Failed - ${date}`,
            body: `The daily build failed at ${date}.\n\nWorkflow: ${context.workflow}\nRun: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
            labels: ['ci', 'automated']
          });